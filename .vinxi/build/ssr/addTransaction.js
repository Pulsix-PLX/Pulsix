import{c as p}from"./assets/server-fns-runtime-C3tiYEg6.js";import{d}from"./assets/db.server-CDeyn5Z_.js";import{j as t}from"./assets/response-CbUr9JDj.js";import"solid-js/web";import"solid-js/web/storage";import"./assets/fetchEvent-9EzSf9d7.js";import"h3";import"vite-plugin-node-polyfills/shims/global";import"node:async_hooks";import"vite-plugin-node-polyfills/shims/process";import"pg";const m=p(async function(n){let o;try{o=await n.request.json()}catch{return t({success:!1,message:"Corpo della richiesta non valido o mancante (JSON invalido)."},{status:400})}const s=n.locals.user?.id;if(console.log("Tarnsaction userId",s),!s)return t({success:!1,message:"Utente non autenticato o sessione scaduta."},{status:401});const{cause:i,date:c,categoryId:l,amount:u,walletId:r,type:a}=o;if(a!=="Income"&&a!=="Expense")return console.warn(`[API AddTransaction] Tentativo con tipo non valido: ${a} per user ${s}`),t({success:!1,message:'Il campo "type" della transazione deve essere obbligatoriamente "Income" o "Expense".'},{status:400});try{if((await d.query("SELECT 1 FROM public.wallets WHERE id = $1 AND user_id = $2",[r,s])).rowCount===0)return console.warn(`[API AddTransaction] Tentativo su wallet inesistente o non appartenente: walletId ${r} per user ${s}`),t({success:!1,message:`Il wallet specificato (ID: ${r}) non Ã¨ stato trovato o non appartiene all'utente.`},{status:400})}catch(e){return console.error("[API AddTransaction] Errore DB durante il controllo del wallet:",e),t({success:!1,message:"Errore interno del server durante la verifica del wallet."},{status:500})}console.log("Dati validati, tentativo inserimento transazione:",{cause:i,date:c,categoryId:l,amount:u,walletId:r,type:a,userId:s});try{const e=await d.query("INSERT INTO public.transactions (cause, amount, wallet_id, type, category_id, date, user_id) VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING *",[i,u,r,a,l,c,s]);return e.rowCount!==null&&e.rowCount>0?(console.log(`[API AddTransaction] Transazione inserita con successo ID: ${e.rows[0].id} per user ${s}`),t({success:!0,transaction:e.rows[0]},{status:201})):(console.error("[API AddTransaction] Inserimento transazione non riuscito (no rows returned) per user ${userId}. Dati:",o),t({success:!1,message:"Errore imprevisto durante la creazione della transazione."},{status:500}))}catch(e){return console.error("[API AddTransaction] Errore DB durante inserimento transazione:",e),t({success:!1,message:"Errore durante il salvataggio della transazione nel database."},{status:500})}},"src_routes_API_lib_addTransaction_ts--POST_1","C:/Users/Matteo/Desktop/Pulsix/src/routes/API/lib/addTransaction.ts?pick=POST&tsr-directive-use-server="),S=m;export{S as POST};
