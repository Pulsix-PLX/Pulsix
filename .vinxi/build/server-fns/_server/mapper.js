import{ssr as o,ssrHydrationKey as n,escape as t,createComponent as r,ssrAttribute as d}from"solid-js/web";import{createSignal as b,createMemo as E,Show as p,For as v}from"solid-js";import{B as H}from"./assets/ButtonSparkle-BxHzGCPC.js";import{a as R}from"./assets/auth-B-0Ucn5g.js";import"solid-js/store";import"axios";var q=["<div",' class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">',"</div>"],L=["<div",'><p class="font-medium mb-2">Interpretazione del segno:</p><div class="flex items-center space-x-4"><label class="flex items-center"><input type="radio" name="signInterpretation" value="negativeIsExpense"','><span class="ml-2">Importi negativi = Uscite, Importi positivi = Entrate</span></label></div><div class="flex items-center space-x-4 mt-2"><label class="flex items-center"><input type="radio" name="signInterpretation" value="negativeIsIncome"','><span class="ml-2">Importi negativi = Entrate, Importi positivi = Uscite</span></label></div></div>'],P=["<div",' class="space-y-3"><div><label class="block font-medium mb-1">Colonna che indica il tipo:</label><select class="w-full p-2 border rounded"',"><option value>-- Seleziona colonna --</option><!--$-->",'<!--/--></select></div><div class="grid grid-cols-2 gap-4"><div><label class="block font-medium mb-1">Valore per Entrate:</label><input type="text" class="w-full p-2 border rounded"',' placeholder="es. entrata, income, guadagno"></div><div><label class="block font-medium mb-1">Valore per Uscite:</label><input type="text" class="w-full p-2 border rounded"',' placeholder="es. uscita, expense, spesa"></div></div></div>'],W=["<div",` class="mt-2 p-4 bg-gray-50 rounded-lg overflow-x-auto"><p class="text-xs text-gray-600 mb-2">Questa è un'anteprima di come verranno interpretati i dati in base alla mappatura e alla logica del tipo transazione attuale. 'N/D' significa che il valore nella riga originale era vuoto o nullo. 'Non Mappato' significa che il campo sistema non è stato associato a nessuna colonna CSV.</p><table class="w-full min-w-max text-sm"> <thead><tr class="border-b-2 border-gray-300 text-left"><!--$-->`,'<!--/--><th class="p-2 font-semibold">Interpretazione</th> </tr></thead><tbody>',"</tbody></table></div>"],J=["<p",` class="mt-2 text-sm text-orange-600">Per vedere l'anteprima dell'interpretazione, mappa prima il campo "Amount".</p>`],K=["<div",' class="mt-4"><button class="text-blue-600 hover:text-blue-800 text-sm flex items-center"><!--$-->',"<!--/-->Mostra anteprima dati interpretati (prime 5 righe)</button><!--$-->","<!--/--><!--$-->","<!--/--></div>"],Q=["<div",' class="p-6 border rounded-lg shadow-lg mb-6 bg-white"><h2 class="text-2xl font-bold mb-3">Mappatura Colonne</h2><p class="text-sm text-gray-600 mb-4">Trascina le colonne del CSV nei campi del sistema corrispondenti</p><!--$-->','<!--/--><div class="flex gap-6"><div class="w-1/2 bg-gray-50 p-4 rounded-lg"><h3 class="text-lg font-semibold mb-3">Colonne CSV</h3><p class="text-sm text-gray-500 mb-3">Trascina queste colonne nei campi a destra</p><div class="space-y-2">','</div></div><div class="w-1/2 bg-gray-50 p-4 rounded-lg"><h3 class="text-lg font-semibold mb-3">Campi Sistema</h3><p class="text-sm text-gray-500 mb-3">Rilascia le colonne CSV qui</p><div class="space-y-2"><!--$-->','<!--/--><div class="','"><div class="flex justify-between items-center"><span class="font-medium text-gray-500">Non utilizzare</span><div class="flex flex-wrap gap-1 max-w-xs">',`</div></div></div></div></div></div><div class="mt-6 p-4 bg-gray-50 rounded-lg"><h3 class="text-lg font-semibold mb-3">Configurazione Tipo Transazione</h3><div class="space-y-4"><div><p class="font-medium mb-2">Come determinare se una transazione è un'entrata o un'uscita?</p><div class="flex items-center space-x-4"><label class="flex items-center"><input type="radio" name="transactionType" value="auto"`,`><span class="ml-2">Dal segno dell'importo</span></label><label class="flex items-center"><input type="radio" name="transactionType" value="column"`,'><span class="ml-2">Da una colonna specifica</span></label></div></div><!--$-->',"<!--/--><!--$-->",'<!--/--></div></div><div class="mt-4"><button class="text-blue-600 hover:text-blue-800 text-sm flex items-center"><!--$-->',"<!--/-->Mostra anteprima interpretazione transazioni</button><!--$-->",'<!--/--></div><div class="mt-6 flex justify-between"><button class="px-4 py-2 bg-gray-200 text-gray-800 rounded hover:bg-gray-300">Annulla</button><!--$-->','<!--/--></div><div class="mt-4 text-sm text-gray-500"><p>* I campi contrassegnati sono obbligatori</p></div></div>'],X=["<button",' class="text-gray-600 hover:text-red-600" title="Rimuovi mappatura">✕</button>'],Y=["<div",' class="','"','><div class="flex justify-between items-center"><span>',"</span><!--$-->","<!--/--></div></div>"],Z=["<div",' class="flex items-center"><span class="bg-blue-100 text-blue-800 px-2 py-1 rounded mr-2">','</span><button class="text-gray-500 hover:text-red-600" title="Rimuovi mappatura">✕</button></div>'],ee=["<div",' class="','"><div class="flex justify-between items-center"><div><span class="font-medium">',"</span><!--$-->","<!--/--></div><!--$-->","<!--/--></div></div>"],k=["<span",' class="text-red-500 ml-1">*</span>'],te=["<span",' class="bg-gray-200 text-gray-700 px-2 py-1 rounded text-xs flex items-center"><!--$-->','<!--/--><button class="ml-1 text-gray-500 hover:text-red-600">✕</button></span>'],ae=["<option",">","</option>"],ne=["<th",' class="p-2 font-semibold">',"</th>"],re=["<tr",' class="border-b border-gray-200"><td class="p-2">','</td><td class="p-2">','</td><td class="p-2">','</td><td class="p-2">','</td><td class="','">',"</td></tr>"];function ye(m){const C=[{id:"cause",label:"Cause"},{id:"amount",label:"Amount"},{id:"currency",label:"Currency"},{id:"date",label:"Date"}],N=["amount","walletId","currency"],B=["cause","amount","currency","date"],[g,se]=b({}),[oe,le]=b(null),[V,ie]=b(null),[D,F]=b(null),[s,ce]=b({mode:"auto",negativeIsExpense:!0}),[y,de]=b(!1);E(()=>{const e=Object.values(g()),a=N.every(i=>e.includes(i));return s().mode==="column"?a&&!!s().columnName&&!!s().positiveValue&&!!s().negativeValue:a});const j=async()=>{console.log("eee");try{const e=g(),a=s();console.log("sent"),await R.api.post("API/Wallets/Wallet/addTransactionByFile/addTransactions",{columnMapping:e,transactionTypeLogic:a}),m.onMappingComplete(e,a)}catch(e){console.error("Errore durante l'invio della mappatura:",e),F(e.message||"Errore durante l'invio della mappatura")}},_=e=>{const i=Object.entries(g()).find(([M,x])=>typeof x=="string"&&x.trim()===e);return i?i[0]:null},T=E(()=>{console.log("Calculating transactionExamples (detailed)...");const e=g();if(!m.rows||m.rows.length===0)return console.log("DEBUG Memo: props.rows è vuoto."),[];const a={};B.forEach(l=>{a[l]=Object.entries(e).find(([f,w])=>typeof w=="string"&&w.trim()===l)?.[0]});const i=m.rows.slice(0,5),M="amount";console.log(`DEBUG Memo: Cerco il valore ID: "${M}" (Tipo: string)`);const x=Object.entries(e);console.log("DEBUG Memo: Controllo queste entries:",JSON.stringify(x)),x.forEach(([l,f])=>{const u=(typeof f==="string"?f.trim():f)===M;console.log(`-- DEBUG Memo Entry: Chiave="<span class="math-inline">{key}", Valore="</span>{value}" (Tipo: <span class="math-inline">{valueType}). Confronto diretto ('</span>{amountFieldId}'): <span class="math-inline">{directMatch}. Confronto con trim ('</span>{amountFieldId}'): ${u}`)});const h=a.amount;if(!h)return console.log("DEBUG Memo: Amount header non mappato, impossibile calcolare esempi completi."),[];if(console.log("DEBUG: Header mappato per 'amount' (Risultato finale find):",h),!h)return console.log("DEBUG Memo: Amount header NON trovato, ritorno array vuoto."),[];console.log(`DEBUG Memo: Amount header trovato: "${h}". Calcolo esempi...`);const z=i.map((l,f)=>{const w=a.walletId?l[a.walletId]??"N/D":"Non Mappato",U=a.cause?l[a.cause]??"N/D":"Non Mappato",u=a.currency?l[a.currency]??"N/D":"Non Mappato",O=a.date?l[a.date]??"N/D":"Non Mappato",A=l[h],I=parseFloat(A);let $="Non determinato";const c=s();if(c.mode==="auto")$=I<0===c.negativeIsExpense?"Uscita":"Entrata";else if(c.mode==="column"&&c.columnName&&c.positiveValue&&c.negativeValue){const S=l[c.columnName];S===c.positiveValue?$="Entrata":S===c.negativeValue&&($="Uscita")}const G=u&&u!=="Non Mappato"&&u!=="N/D"?u:"EUR";return{walletId:w,cause:U,amount:isNaN(I)?"N/A":new Intl.NumberFormat("it-IT",{style:"currency",currency:G}).format(I),currency:u,date:O,interpretation:$}});return console.log(`DEBUG: Esempi dettagliati calcolati: ${z.length}`),z});return o(Q,n(),t(r(p,{get when(){return D()},get children(){return o(q,n(),t(D()))}})),t(r(v,{get each(){return m.csvHeaders},children:e=>{const a=E(()=>Object.keys(g()).includes(e));return o(Y,n(),`p-3 rounded-md cursor-grab ${a()?"bg-gray-300 text-gray-600":"bg-blue-100 hover:bg-blue-200 text-blue-800"}`,d("draggable",!a(),!1),t(e),t(r(p,{get when(){return a()},get children(){return o(X,n())}})))}})),t(r(v,{each:C,children:e=>{const a=E(()=>_(e.id)),i=N.includes(e.id);return o(ee,n(),`p-3 rounded-md border-2 ${V()===e.id?"border-blue-500 bg-blue-50":a()?"border-green-500 bg-green-50":i?"border-yellow-300 bg-yellow-50":"border-gray-300 bg-white"}`,t(e.label),i&&k[0]+n()+k[1],t(r(p,{get when(){return a()},get children(){return o(Z,n(),t(a()))}})))}})),`p-3 rounded-md border-2 ${V()==="non_utilizzare"?"border-red-500 bg-red-50":"border-gray-300 bg-white"}`,t(r(v,{get each(){return Object.entries(g())},children:([e,a])=>r(p,{when:a==="non_utilizzare",get children(){return o(te,n(),t(e))}})})),d("checked",s().mode==="auto",!0),d("checked",s().mode==="column",!0),t(r(p,{get when(){return s().mode==="auto"},get children(){return o(L,n(),d("checked",s().negativeIsExpense===!0,!0),d("checked",s().negativeIsExpense===!1,!0))}})),t(r(p,{get when(){return s().mode==="column"},get children(){return o(P,n(),d("value",t(s().columnName,!0)||"",!1),t(r(v,{get each(){return m.csvHeaders},children:e=>o(ae,n()+d("value",t(e,!0),!1),t(e))})),d("value",t(s().positiveValue,!0)||"",!1),d("value",t(s().negativeValue,!0)||"",!1))}})),y()?"▼ ":"► ",t(r(p,{get when(){return y()},get children(){return o(K,n(),y()?"▼ ":"► ",t(r(p,{get when(){return y()&&T().length>0},get children(){return o(W,n(),t(r(v,{each:C,children:e=>o(ne,n(),t(e.label))})),t(r(v,{get each(){return T()},children:e=>o(re,n(),t(e.cause),t(e.amount),t(e.currency),t(e.date),`p-2 font-medium ${e.interpretation==="Entrata"?"text-green-600":e.interpretation==="Uscita"?"text-red-600":"text-gray-600"}`,t(e.interpretation))})))}})),t(r(p,{get when(){return y()&&!_("amount")},get children(){return o(J,n())}})))}})),t(r(H,{onClick:j,text:"Conferma mappatura"})))}export{ye as default};
