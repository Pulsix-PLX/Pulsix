import{createRoot as S,createSignal as n}from"solid-js";function h(){const[r,a]=n(!1),[p,s]=n(null),[i,c]=n(!1),l=new Set,[g,u]=n(!1);let o=null;const d=async()=>{if(r()||i())return r();c(!0),s(null),console.log("SplineLoader: Starting runtime preload...");try{if(o=(await import("@splinetool/runtime")).Application,!o)throw new Error("Spline runtime module loaded but Application class not found.");return a(!0),console.log("SplineLoader: Runtime preloaded successfully."),!0}catch(e){return console.error("SplineLoader: Runtime preload failed:",e),s(e instanceof Error?e:new Error(String(e))),a(!1),!1}finally{c(!1)}},f=async e=>{if(!(!e||l.has(e))){console.log(`SplineLoader: Attempting to prefetch scene data for ${e}...`),u(!0);try{const t=await fetch(e,{cache:"force-cache"});t.ok?console.log(`SplineLoader: Prefetch for ${e} likely successful (status ${t.status}). Data might be cached.`):console.warn(`SplineLoader: Prefetch for ${e} failed with status ${t.status}. The actual load might still work.`)}catch(t){console.warn(`SplineLoader: Prefetch for ${e} threw an error:`,t)}finally{l.add(e),u(!1)}}};return{preloadRuntime:d,prefetchSceneData:f,preloadRuntimeAndScenes:async e=>{await d()?(console.log("SplineLoader: Runtime ready, starting scene prefetch..."),e.forEach(m=>f(m))):console.error("SplineLoader: Cannot prefetch scenes because runtime failed to load.")},getRuntime:()=>o,getRuntimeStatus:()=>({isLoading:i(),isReady:r(),error:p()})}}const A=S(h);export{A as default};
