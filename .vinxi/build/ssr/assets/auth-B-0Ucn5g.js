import{createSignal as y}from"solid-js";import{createStore as L}from"solid-js/store";import d from"axios";const n=d.create({baseURL:"http://localhost:3001/",withCredentials:!0,headers:{"Content-Type":"application/json"}});function T(){const[u,a]=y(null),[i,o]=L({user:null,isAuthenticated:!1,isLoading:!0,error:null});async function g(){o({isLoading:!0,error:null});try{const e=await n.post("API/Auth/refresh");console.log(e.data.accessToken),a(e.data.accessToken),o({isAuthenticated:!0,error:null,isLoading:!1})}catch{console.log("Initialization: No valid refresh token found or refresh failed."),a(null),o({isAuthenticated:!1,error:null})}finally{o({isLoading:!1})}}function A(e,t){let r=t;if(d.isAxiosError(e)){const s=e;r=s.response?.data?.error||s.response?.data?.message||s.message||t,s.response?.data?.details&&(r=Object.values(s.response.data.details).map(P=>P._errors.join(", ")).join("; "))}else e instanceof Error&&(r=e.message);console.error(`${t} Error:`,e),o({error:r})}async function p(e,t){o({isLoading:!0,error:null}),console.log("Login");try{const r=await n.post("API/Auth/login",{username:e,password:t});return a(r.data.accessToken),!0}catch(r){return A(r,"Login failed"),!1}finally{o({isLoading:!1})}}async function h(){i.isLoading||o({isLoading:!0}),u(),a(null),o({user:null,isAuthenticated:!1,error:null});try{await n.post("API/Auth/logout")}catch(e){console.error("Logout API call error:",e)}finally{o({isLoading:!1})}}n.interceptors.request.use(e=>{const t=u();return console.log("INTERCEPTOR: Token value:",t),console.log("INTERCEPTOR: Config headers object:",e.headers),t&&e.headers&&(console.log("token yess"),e.url!=="API/Auth/login"&&e.url!=="API/Auth/registration"&&(e.headers.Authorization=`Bearer ${t}`,console.log("header",e.headers.Authorization))),e},e=>Promise.reject(e));let l=!1,c=[];const f=(e,t=null)=>{c.forEach(r=>{e?r.reject(e):(r.config.headers.Authorization=`Bearer ${t}`,n(r.config).then(r.resolve).catch(r.reject))}),c=[]};return n.interceptors.response.use(e=>e,async e=>{const t=e.config;if(e.response?.status===401&&t&&t.url!=="API/Auth/refresh"&&t.url!=="API/Auth/login"&&t.url!=="API/Auth/registration"){if(l)return new Promise((r,s)=>{c.push({resolve:r,reject:s,config:t})}).catch(r=>Promise.reject(r));t._retry=!0,l=!0,console.log("Axios interceptor: 401 detected, attempting refresh...");try{const s=(await n.post("API/Auth/refresh")).data.accessToken;return a(s),console.log("Axios interceptor: Token refreshed successfully."),t.headers&&(t.headers.Authorization=`Bearer ${s}`),f(null,s),n(t)}catch(r){return console.error("Axios interceptor: Refresh token failed.",r),f(r,null),await h(),Promise.reject(r)}finally{l=!1}}return Promise.reject(e)}),{get user(){return i.user},get isAuthenticated(){return i.isAuthenticated},get isLoading(){return i.isLoading},get error(){return i.error},initialize:g,login:p,logout:h,api:n}}const j=T();export{j as a};
