import{H3Event as l,sendRedirect as _,setResponseStatus as w,setHeader as A,getRequestIP as C,getResponseStatus as T,getResponseStatusText as q,getResponseHeader as E,setResponseHeader as $,removeResponseHeader as L,appendResponseHeader as k,getResponseHeaders as P,getRequestURL as W,getRequestWebStream as j,useSession as I,getCookie as O,setCookie as U}from"h3";import{AsyncLocalStorage as F}from"node:async_hooks";function N(t={}){let e,s=!1;const r=n=>{if(e&&e!==n)throw new Error("Context conflict")};let a;if(t.asyncContext){const n=t.AsyncLocalStorage||globalThis.AsyncLocalStorage;n?a=new n:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const f=()=>{if(a){const n=a.getStore();if(n!==void 0)return n}return e};return{use:()=>{const n=f();if(n===void 0)throw new Error("Context is not available");return n},tryUse:()=>f(),set:(n,i)=>{i||r(n),e=n,s=!0},unset:()=>{e=void 0,s=!1},call:(n,i)=>{r(n),e=n;try{return a?a.run(n,i):i()}finally{s||(e=void 0)}},async callAsync(n,i){e=n;const H=()=>{e=n},p=()=>e===n?H:void 0;h.add(p);try{const v=a?a.run(n,i):i();return s||(e=void 0),await v}finally{h.delete(p)}}}}function K(t={}){const e={};return{get(s,r={}){return e[s]||(e[s]=N({...t,...r})),e[s]}}}const u=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},g="__unctx__",B=u[g]||(u[g]=K()),M=(t,e={})=>B.get(t,e),y="__unctx_async_handlers__",h=u[y]||(u[y]=new Set);function z(t){let e;const s=m(t),r={duplex:"half",method:t.method,headers:t.headers};return t.node.req.body instanceof ArrayBuffer?new Request(s,{...r,body:t.node.req.body}):new Request(s,{...r,get body(){return e||(e=Z(t),e)}})}function D(t){return t.web??={request:z(t),url:m(t)},t.web.request}function G(){return ne()}const x=Symbol("$HTTPEvent");function J(t){return typeof t=="object"&&(t instanceof l||t?.[x]instanceof l||t?.__is_event__===!0)}function o(t){return function(...e){let s=e[0];if(J(s))e[0]=s instanceof l||s.__is_event__?s:s[x];else{if(!globalThis.app.config.server.experimental?.asyncContext)throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");if(s=G(),!s)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");e.unshift(s)}return t(...e)}}const m=o(W),Q=o(C),R=o(w),S=o(T),V=o(q),c=o(P),b=o(E),X=o($),Y=o(k),ue=o(_),de=o(O),le=o(U),fe=o(I),pe=o(A),Z=o(j),ee=o(L),te=o(D);function se(){return M("nitro-app",{asyncContext:!!globalThis.app.config.server.experimental?.asyncContext,AsyncLocalStorage:F})}function ne(){return se().use().event}const d="solidFetchEvent";function oe(t){return{request:te(t),response:ae(t),clientAddress:Q(t),locals:{},nativeEvent:t}}function ge(t){return{...t}}function ye(t){if(!t.context[d]){const e=oe(t);t.context[d]=e}return t.context[d]}class re{event;constructor(e){this.event=e}get(e){const s=b(this.event,e);return Array.isArray(s)?s.join(", "):s||null}has(e){return this.get(e)!==void 0}set(e,s){return X(this.event,e,s)}delete(e){return ee(this.event,e)}append(e,s){Y(this.event,e,s)}getSetCookie(){const e=b(this.event,"Set-Cookie");return Array.isArray(e)?e:[e]}forEach(e){return Object.entries(c(this.event)).forEach(([s,r])=>e(Array.isArray(r)?r.join(", "):r,s,this))}entries(){return Object.entries(c(this.event)).map(([e,s])=>[e,Array.isArray(s)?s.join(", "):s])[Symbol.iterator]()}keys(){return Object.keys(c(this.event))[Symbol.iterator]()}values(){return Object.values(c(this.event)).map(e=>Array.isArray(e)?e.join(", "):e)[Symbol.iterator]()}[Symbol.iterator](){return this.entries()[Symbol.iterator]()}}function ae(t){return{get status(){return S(t)},set status(e){R(t,e)},get statusText(){return V(t)},set statusText(e){R(t,S(t),e)},headers:new re(t)}}export{ye as a,ue as b,R as c,pe as d,ge as e,de as g,le as s,fe as u};
